{"ast":null,"code":"import BaseIcon from './BaseIcon.vue';\nexport default {\n  name: 'BaseButton',\n  props: {\n    mod: {\n      type: String,\n      validator: value => ['primary', 'arrow', 'send'].includes(value),\n      default: 'primary'\n    },\n    iconLeft: String,\n    iconRight: String,\n    sent: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    classObj() {\n      return {\n        [`button--${this.mod}`]: !!this.mod,\n        \"button--sent\": !!this.mod && this.sent\n      };\n    },\n\n    computedIcon() {\n      return this.mod === 'arrow' ? 'arrow' : this.mod === 'send' ? 'send' : this.iconLeft ?? this.iconRight;\n    },\n\n    hasIconLeft() {\n      return this.mod === 'arrow' ? false : this.mod === 'send' ? true : this.iconLeft;\n    },\n\n    hasIconRight() {\n      return this.mod === 'arrow' ? true : this.mod === 'send' ? false : this.iconRight;\n    },\n\n    renderText() {\n      if (this.mod === 'send' && this.sent) {\n        return 'Ваше сообщение отправлено!';\n      } else {\n        return 'Отправить';\n      }\n    }\n\n  },\n  components: {\n    BaseIcon\n  }\n};","map":{"version":3,"mappings":"AAeA;AAEA;EACAA,kBADA;EAEAC;IACAC;MACAC,YADA;MAEAC,gEAFA;MAGAC;IAHA,CADA;IAMAC,gBANA;IAOAC,iBAPA;IAQAC;MACAL,aADA;MAEAE;IAFA;EARA,CAFA;EAeAI;IACAC;MACA;QACA,mCADA;QAEA;MAFA;IAIA,CANA;;IAOAC;MACA,wCACA,+BACA,+BAFA;IAGA,CAXA;;IAYAC;MACA,sCACA,6BACA,aAFA;IAGA,CAhBA;;IAiBAC;MACA,qCACA,8BACA,cAFA;IAGA,CArBA;;IAsBAC;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;IACA;;EA5BA,CAfA;EA6CAC;IACAC;EADA;AA7CA","names":["name","props","mod","type","validator","default","iconLeft","iconRight","sent","computed","classObj","computedIcon","hasIconLeft","hasIconRight","renderText","components","BaseIcon"],"sourceRoot":"src/components","sources":["BaseButton.vue"],"sourcesContent":["<template>\n  <button class=\"button\" :class=\"classObj\">\n    <BaseIcon v-if=\"hasIconLeft\" :icon=\"computedIcon\"/>\n    <transition name=\"fade\">\n      <span class=\"button-text\">\n        <slot>\n          {{ renderText }}\n        </slot>\n      </span>\n    </transition>\n    <BaseIcon v-if=\"hasIconRight\" :icon=\"computedIcon\"/>\n  </button>\n</template>\n\n<script>\nimport BaseIcon from './BaseIcon.vue';\n\nexport default {\n  name: 'BaseButton',\n  props: {\n    mod: {\n      type: String,\n      validator: (value) => ['primary', 'arrow', 'send'].includes(value),\n      default: 'primary'\n    },\n    iconLeft: String,\n    iconRight: String,\n    sent: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    classObj() {\n      return {\n        [`button--${this.mod}`]: !!this.mod,\n        \"button--sent\": !!this.mod && this.sent\n      }\n    },\n    computedIcon() {\n      return this.mod === 'arrow' ? 'arrow'\n        : this.mod === 'send' ? 'send'\n        : this.iconLeft ?? this.iconRight;\n    },\n    hasIconLeft() {\n      return this.mod === 'arrow' ? false\n        : this.mod === 'send' ? true\n        : this.iconLeft;\n    },\n    hasIconRight() {\n      return this.mod === 'arrow' ? true\n        : this.mod === 'send' ? false\n        : this.iconRight;\n    },\n    renderText() {\n      if (this.mod === 'send' && this.sent) {\n        return 'Ваше сообщение отправлено!'\n      } else {\n        return 'Отправить';\n      }\n    }\n  },\n  components: {\n    BaseIcon\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.button {\n  $self: &;\n  display: flex;\n  cursor: pointer;\n  border: none;\n  position: relative;\n\n  &-text {\n    position: relative;\n    z-index: 2;\n  }\n\n  &--arrow {\n    background-color: transparent;\n    color: get-var(color, blue_light);\n    font-weight: 600;\n    font-size: 16px;\n    padding-right: 10px;\n    gap: 10px;\n    text-transform: uppercase;\n    z-index: 2;\n\n    &::after {\n      content: '';\n      @include create-figure(61px, transparent, 50%, 1px, get-var(color, grey_circle));\n      position: absolute;\n      right: 0;\n      top: 50%;\n      transform: translateY(calc(-50% - 2px));\n      z-index: 1;\n    }\n  }\n\n  &--send {\n    $min-size: 216px;\n    $max-size: 227px;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    @include create-figure(227px, transparent, 50%);\n    width:  100%;\n    height: 100%;\n\n    @include to-responsive((\n      min-width:  ($min-size, $max-size),\n      max-width:  ($min-size, $max-size),\n      min-height: ($min-size, $max-size),\n      max-height: ($min-size, $max-size),\n      font-size: (18px, 20px)\n    ));\n    border-radius: 50%;\n    background: linear-gradient(93.29deg, #388AF3 21.04%, #A483E2 88.77%);\n    transition: .25s;\n    font-weight: 800;\n    //font-size: 20px;\n    //@include to-responsive(font-size, 18px, 20px);\n\n    #{$self}-text {\n      position: absolute;\n      top: 65%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      transition: .25s;\n      color: #388AF3;\n      width: 100%;\n    }\n\n    .icon {\n      z-index: 1;\n      position: absolute;\n      top: 25%;\n      right: 50%;\n      transform: translateX(50%);\n      transition: .25s;\n      transform-origin: right top;\n      @include to-responsive(font-size, 55px, 57px);\n    }\n\n    &::before {\n      content: '';\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      @include create-figure(calc(100% - 19px), #FFF, 50%);\n      // @include to-responsive((\n      //   min-width:  ($min-size, $max-size),\n      //   max-width:  ($min-size, $max-size),\n      //   min-height: ($min-size, $max-size),\n      //   max-height: ($min-size, $max-size),\n      //   font-size: (18px, 20px)\n      // ));\n      transition: .25s;\n    }\n\n  }\n\n  &--send:not(&--sent):hover, &--sent {\n    background: linear-gradient(93.29deg, #388AF3 21.04%, #388AF3 88.77%);\n    #{$self}-text {\n      top: 50%;\n      color: #FFF;\n    }\n    .icon {\n      font-size: 96px;\n      top: 5%;\n      //right: 62px;\n      right: 27%;\n    }\n    &::before {\n      background-color: #388AF3;\n    }\n  }\n\n  &--sent {\n    .icon {\n      font-size: 0px;\n      top: 10%;\n      right: 0%;\n    }\n\n    &, &::before, .icon, #{$self}-text {\n      transition: 1s;\n    }\n  }\n\n  .fade-enter-active, .fade-leave-active {\n    transition: opacity .5s;\n  }\n  .fade-enter, .fade-leave-to {\n    opacity: 0;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}